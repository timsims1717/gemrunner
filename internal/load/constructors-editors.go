package load

import (
	"gemrunner/internal/constants"
	"gemrunner/internal/ui"
	"gemrunner/pkg/world"
	"github.com/gopxl/pixel"
)

var (
	// editor options dialogs
	OpenPuzzleConstructor          *ui.DialogConstructor
	ChangeNameConstructor          *ui.DialogConstructor
	AreYouSureDeleteConstructor    *ui.DialogConstructor
	UnableToSaveConstructor        *ui.DialogConstructor
	UnableToSaveConfirmConstructor *ui.DialogConstructor
	WorldDialogConstructor         *ui.DialogConstructor
	WorldListEntry                 ui.ElementConstructor
	TurfTileItem                   ui.ElementConstructor
	LadderTileItem                 ui.ElementConstructor
	DoodadTileItem                 ui.ElementConstructor
	WorldTxtItem                   ui.ElementConstructor
	CombineSetsConstructor         *ui.DialogConstructor
	// editor mode dialogs
	CrackedTileOptionsConstructor *ui.DialogConstructor
	BombOptionsConstructor        *ui.DialogConstructor
)

func InitEditorConstructors() {
	// Editor Options
	OpenPuzzleConstructor = &ui.DialogConstructor{
		Key:    constants.DialogOpenPuzzle,
		Width:  11,
		Height: 10,
		Elements: []ui.ElementConstructor{
			{
				Key:         "open_title",
				Text:        "Open Puzzle Set",
				Position:    pixel.V(-84, 72),
				Color:       pixel.ToRGBA(constants.ColorWhite),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "cancel",
				SprKey:      "cancel_btn_big",
				SprKey2:     "cancel_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Cancel",
				Position:    pixel.V(72, -64),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "confirm",
				SprKey:      "open_btn_big",
				SprKey2:     "open_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Open",
				Position:    pixel.V(52, -64),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "puzzle_list",
				HelpText:    "The list of puzzles.",
				Batch:       constants.UIBatch,
				ElementType: ui.ScrollElement,
				Position:    pixel.V(0, 8),
				Width:       10 * world.TileSize,
				Height:      7 * world.TileSize,
			},
		},
	}
	ChangeNameConstructor = &ui.DialogConstructor{
		Key:    constants.DialogChangeName,
		Width:  12,
		Height: 4,
		Elements: []ui.ElementConstructor{
			{
				Key:         "change_name_title",
				Text:        "Puzzle Set Name",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-92, 24),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "cancel",
				SprKey:      "cancel_btn_big",
				SprKey2:     "cancel_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Cancel",
				Position:    pixel.V(84, -20),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "confirm",
				SprKey:      "check_btn_big",
				SprKey2:     "check_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Confirm",
				Position:    pixel.V(64, -20),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "puzzle_name",
				Text:        "Untitled",
				SprKey:      constants.TextCaret,
				Color:       pixel.ToRGBA(constants.ColorWhite),
				HelpText:    "Enter the name of the puzzle here.",
				Batch:       constants.UIBatch,
				ElementType: ui.InputElement,
				Position:    pixel.V(0, 4),
				Width:       11 * world.TileSize,
				Height:      1 * world.TileSize,
			},
			{
				Key:         "change_name_error",
				Text:        "Name can't be empty.",
				Color:       pixel.ToRGBA(constants.ColorRed),
				Position:    pixel.V(-89, -12),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
		},
	}
	AreYouSureDeleteConstructor = &ui.DialogConstructor{
		Key:    constants.DialogAreYouSureDelete,
		Width:  8,
		Height: 3,
		Elements: []ui.ElementConstructor{
			{
				Key:         "are_you_sure_msg",
				Text:        "Are you sure?\nThis can't be undone.",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-56, 16),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "confirm",
				SprKey:      "check_btn_big",
				SprKey2:     "check_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Confirm",
				Position:    pixel.V(32, -12),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "cancel",
				SprKey:      "cancel_btn_big",
				SprKey2:     "cancel_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Cancel",
				Position:    pixel.V(52, -12),
				ElementType: ui.ButtonElement,
			},
		},
	}
	UnableToSaveConstructor = &ui.DialogConstructor{
		Key:    constants.DialogUnableToSave,
		Width:  8,
		Height: 3,
		Elements: []ui.ElementConstructor{
			{
				Key:         "unable_to_save_msg",
				Text:        "There was an error\nwhen trying to save\nyour puzzle.",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-56, 16),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "confirm",
				SprKey:      "check_btn_big",
				SprKey2:     "check_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Confirm",
				Position:    pixel.V(52, -12),
				ElementType: ui.ButtonElement,
			},
		},
	}
	UnableToSaveConfirmConstructor = &ui.DialogConstructor{
		Key:    constants.DialogUnableToSaveConfirm,
		Width:  8,
		Height: 4,
		Elements: []ui.ElementConstructor{
			{
				Key:         "unable_to_save_msg",
				Text:        "There was an error\nwhen trying to save\nyour puzzle.\nDo you want to do\nthat anyway?",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-56, 24),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "confirm",
				SprKey:      "check_btn_big",
				SprKey2:     "check_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Confirm",
				Position:    pixel.V(32, -20),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "cancel",
				SprKey:      "cancel_btn_big",
				SprKey2:     "cancel_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Cancel",
				Position:    pixel.V(52, -20),
				ElementType: ui.ButtonElement,
			},
		},
	}
	WorldDialogConstructor = &ui.DialogConstructor{
		Key:    constants.DialogChangeWorld,
		Width:  17,
		Height: 12,
		Elements: []ui.ElementConstructor{
			{
				Key:         "change_world_title",
				Text:        "Change World",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-132, 88),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "world_container_selected",
				HelpText:    "Current World",
				ElementType: ui.ContainerElement,
				Position:    pixel.V(-64, 72),
				Width:       8 * world.TileSize,
				Height:      1 * world.TileSize,
			},
			{
				Key:         "custom_text",
				Text:        "Custom Colors",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(8, 80),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "custom_world_check",
				SprKey:      "checkbox_false",
				SprKey2:     "checkbox_true",
				Batch:       constants.UIBatch,
				HelpText:    "Customize this puzzle's colors.",
				Position:    pixel.V(120, 80),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "primary_text",
				Text:        "Primary Color",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(16, 64),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "red_color_primary",
				SprKey:      "red_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(24, 48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "red_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Red",
				Position:    pixel.V(24, 48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "orange_color_primary",
				SprKey:      "orange_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(40, 48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "orange_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Orange",
				Position:    pixel.V(40, 48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "green_color_primary",
				SprKey:      "green_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(56, 48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "green_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Green",
				Position:    pixel.V(56, 48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "cyan_color_primary",
				SprKey:      "cyan_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(72, 48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "cyan_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Cyan",
				Position:    pixel.V(72, 48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "blue_color_primary",
				SprKey:      "blue_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(88, 48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "blue_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Blue",
				Position:    pixel.V(88, 48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "purple_color_primary",
				SprKey:      "purple_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(104, 48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "purple_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Purple",
				Position:    pixel.V(104, 48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "pink_color_primary",
				SprKey:      "pink_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(120, 48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "pink_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Pink",
				Position:    pixel.V(120, 48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "yellow_color_primary",
				SprKey:      "yellow_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(24, 32),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "yellow_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Yellow",
				Position:    pixel.V(24, 32),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "gold_color_primary",
				SprKey:      "gold_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(40, 32),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "gold_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Gold",
				Position:    pixel.V(40, 32),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "brown_color_primary",
				SprKey:      "brown_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(56, 32),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "brown_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Brown",
				Position:    pixel.V(56, 32),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "tan_color_primary",
				SprKey:      "tan_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(72, 32),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "tan_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Tan",
				Position:    pixel.V(72, 32),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "light_gray_color_primary",
				SprKey:      "light_gray_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(88, 32),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "light_gray_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Light Gray",
				Position:    pixel.V(88, 32),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "gray_color_primary",
				SprKey:      "gray_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(104, 32),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "gray_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Gray",
				Position:    pixel.V(104, 32),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "burnt_color_primary",
				SprKey:      "burnt_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(120, 32),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "burnt_check_primary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Burnt",
				Position:    pixel.V(120, 32),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "secondary_text",
				Text:        "Secondary Color",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(16, 16),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "red_color_secondary",
				SprKey:      "red_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(24, 0),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "red_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Red",
				Position:    pixel.V(24, 0),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "orange_color_secondary",
				SprKey:      "orange_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(40, 0),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "orange_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Orange",
				Position:    pixel.V(40, 0),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "green_color_secondary",
				SprKey:      "green_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(56, 0),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "green_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Green",
				Position:    pixel.V(56, 0),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "cyan_color_secondary",
				SprKey:      "cyan_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(72, 0),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "cyan_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Cyan",
				Position:    pixel.V(72, 0),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "blue_color_secondary",
				SprKey:      "blue_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(88, 0),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "blue_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Blue",
				Position:    pixel.V(88, 0),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "purple_color_secondary",
				SprKey:      "purple_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(104, 0),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "purple_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Purple",
				Position:    pixel.V(104, 0),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "pink_color_secondary",
				SprKey:      "pink_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(120, 0),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "pink_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Pink",
				Position:    pixel.V(120, 0),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "yellow_color_secondary",
				SprKey:      "yellow_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(24, -16),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "yellow_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Yellow",
				Position:    pixel.V(24, -16),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "gold_color_secondary",
				SprKey:      "gold_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(40, -16),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "gold_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Gold",
				Position:    pixel.V(40, -16),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "brown_color_secondary",
				SprKey:      "brown_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(56, -16),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "brown_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Brown",
				Position:    pixel.V(56, -16),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "tan_color_secondary",
				SprKey:      "tan_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(72, -16),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "tan_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Tan",
				Position:    pixel.V(72, -16),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "light_gray_color_secondary",
				SprKey:      "light_gray_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(88, -16),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "light_gray_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Light Gray",
				Position:    pixel.V(88, -16),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "gray_color_secondary",
				SprKey:      "gray_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(104, -16),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "gray_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Gray",
				Position:    pixel.V(104, -16),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "burnt_color_secondary",
				SprKey:      "burnt_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(120, -16),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "burnt_check_secondary",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Burnt",
				Position:    pixel.V(120, -16),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "doodad_text",
				Text:        "Doodad Color",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(16, -32),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "red_color_doodad",
				SprKey:      "red_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(24, -48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "red_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Red",
				Position:    pixel.V(24, -48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "orange_color_doodad",
				SprKey:      "orange_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(40, -48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "orange_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Orange",
				Position:    pixel.V(40, -48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "green_color_doodad",
				SprKey:      "green_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(56, -48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "green_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Green",
				Position:    pixel.V(56, -48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "cyan_color_doodad",
				SprKey:      "cyan_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(72, -48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "cyan_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Cyan",
				Position:    pixel.V(72, -48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "blue_color_doodad",
				SprKey:      "blue_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(88, -48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "blue_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Blue",
				Position:    pixel.V(88, -48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "purple_color_doodad",
				SprKey:      "purple_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(104, -48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "purple_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Purple",
				Position:    pixel.V(104, -48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "pink_color_doodad",
				SprKey:      "pink_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(120, -48),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "pink_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Pink",
				Position:    pixel.V(120, -48),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "yellow_color_doodad",
				SprKey:      "yellow_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(24, -64),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "yellow_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Yellow",
				Position:    pixel.V(24, -64),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "gold_color_doodad",
				SprKey:      "gold_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(40, -64),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "gold_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Gold",
				Position:    pixel.V(40, -64),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "brown_color_doodad",
				SprKey:      "brown_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(56, -64),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "brown_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Brown",
				Position:    pixel.V(56, -64),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "tan_color_doodad",
				SprKey:      "tan_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(72, -64),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "tan_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Tan",
				Position:    pixel.V(72, -64),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "light_gray_color_doodad",
				SprKey:      "light_gray_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(88, -64),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "light_gray_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Light Gray",
				Position:    pixel.V(88, -64),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "gray_color_doodad",
				SprKey:      "gray_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(104, -64),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "gray_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Gray",
				Position:    pixel.V(104, -64),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "burnt_color_doodad",
				SprKey:      "burnt_square",
				Batch:       constants.UIBatch,
				Position:    pixel.V(120, -64),
				ElementType: ui.SpriteElement,
			},
			{
				Key:         "burnt_check_doodad",
				SprKey:      "checkbox_color_false",
				SprKey2:     "checkbox_color_true",
				Batch:       constants.UIBatch,
				HelpText:    "Burnt",
				Position:    pixel.V(120, -64),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "cancel",
				SprKey:      "cancel_btn_big",
				SprKey2:     "cancel_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Cancel",
				Position:    pixel.V(124, -84),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "confirm",
				SprKey:      "check_btn_big",
				SprKey2:     "check_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Confirm",
				Position:    pixel.V(104, -84),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "world_list",
				HelpText:    "The list of worlds.",
				Batch:       constants.UIBatch,
				ElementType: ui.ScrollElement,
				Position:    pixel.V(-64, -16),
				Width:       8 * world.TileSize,
				Height:      9 * world.TileSize,
			},
		},
	}
	WorldListEntry = ui.ElementConstructor{
		Key:         "world_container_%d",
		HelpText:    "Change to %s world.",
		ElementType: ui.ContainerElement,
		Width:       7 * world.TileSize,
		Height:      1 * world.TileSize,
	}
	TurfTileItem = ui.ElementConstructor{
		Key:         "turf_tile",
		Position:    pixel.V(-48, 0),
		Batch:       constants.TileBatch,
		ElementType: ui.SpriteElement,
	}
	LadderTileItem = ui.ElementConstructor{
		Key:         "ladder_tile",
		Position:    pixel.V(-32, 0),
		Batch:       constants.TileBatch,
		ElementType: ui.SpriteElement,
	}
	DoodadTileItem = ui.ElementConstructor{
		Key:         "doodad_tile",
		Position:    pixel.V(-16, 0),
		Batch:       constants.TileBatch,
		ElementType: ui.SpriteElement,
	}
	WorldTxtItem = ui.ElementConstructor{
		Key:         "world_text",
		Position:    pixel.V(-4, 0),
		Color:       pixel.ToRGBA(constants.ColorWhite),
		ElementType: ui.TextElement,
		Anchor:      pixel.Right,
	}

	CombineSetsConstructor = &ui.DialogConstructor{
		Key:    constants.DialogCombineSets,
		Width:  11,
		Height: 10,
		Elements: []ui.ElementConstructor{
			{
				Key:         "combine_title",
				Text:        "Combine Puzzle Set",
				Position:    pixel.V(-84, 72),
				Color:       pixel.ToRGBA(constants.ColorWhite),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "cancel",
				SprKey:      "cancel_btn_big",
				SprKey2:     "cancel_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Cancel",
				Position:    pixel.V(72, -64),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "confirm",
				SprKey:      "check_btn_big",
				SprKey2:     "check_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Combine",
				Position:    pixel.V(52, -64),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "puzzle_list",
				HelpText:    "The list of puzzles.",
				Batch:       constants.UIBatch,
				ElementType: ui.ScrollElement,
				Position:    pixel.V(0, 8),
				Width:       10 * world.TileSize,
				Height:      7 * world.TileSize,
			},
		},
	}
	// Wrench
	CrackedTileOptionsConstructor = &ui.DialogConstructor{
		Key:    constants.DialogCrackedTiles,
		Width:  8,
		Height: 6,
		Elements: []ui.ElementConstructor{
			{
				Key:         "cracked_tile_title",
				Text:        "Cracked Tile",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-60, 40),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "cancel",
				SprKey:      "cancel_btn_big",
				SprKey2:     "cancel_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Cancel",
				Position:    pixel.V(52, -36),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "confirm",
				SprKey:      "check_btn_big",
				SprKey2:     "check_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Confirm",
				Position:    pixel.V(32, -36),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "cracked_tile_regenerate",
				Text:        "Regenerates",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-56, 22),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "cracked_tile_regenerate_check",
				SprKey:      "checkbox_false",
				SprKey2:     "checkbox_true",
				Batch:       constants.UIBatch,
				HelpText:    "Whether the tile reforms after collapsing.",
				Position:    pixel.V(52, 22),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "cracked_tile_show",
				Text:        "Visible Cracks",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-56, 4),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "cracked_tile_show_check",
				SprKey:      "checkbox_false",
				SprKey2:     "checkbox_true",
				Batch:       constants.UIBatch,
				HelpText:    "Show the cracks before a player steps on them.",
				Position:    pixel.V(52, 4),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "cracked_tile_enemy",
				Text:        "Enemy Can Crack",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-56, -14),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "cracked_tile_enemy_check",
				SprKey:      "checkbox_false",
				SprKey2:     "checkbox_true",
				Batch:       constants.UIBatch,
				HelpText:    "Walking enemies can collapse this tile.",
				Position:    pixel.V(52, -14),
				ElementType: ui.CheckboxElement,
			},
		},
	}
	BombOptionsConstructor = &ui.DialogConstructor{
		Key:    constants.DialogBomb,
		Width:  8,
		Height: 6,
		Elements: []ui.ElementConstructor{
			{
				Key:         "bomb_options_title",
				Text:        "Bomb",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-60, 40),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "cancel",
				SprKey:      "cancel_btn_big",
				SprKey2:     "cancel_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Cancel",
				Position:    pixel.V(52, -36),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "confirm",
				SprKey:      "check_btn_big",
				SprKey2:     "check_btn_click_big",
				Batch:       constants.UIBatch,
				HelpText:    "Confirm",
				Position:    pixel.V(32, -36),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "bomb_cross",
				Text:        "Cross Shape",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-56, 22),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "bomb_cross_check",
				SprKey:      "checkbox_false",
				SprKey2:     "checkbox_true",
				Batch:       constants.UIBatch,
				HelpText:    "Whether the bomb explosion is cross-shaped.",
				Position:    pixel.V(52, 22),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "bomb_regenerate",
				Text:        "Regenerates",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-56, 4),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "bomb_regenerate_check",
				SprKey:      "checkbox_false",
				SprKey2:     "checkbox_true",
				Batch:       constants.UIBatch,
				HelpText:    "Whether the bomb regenerates after exploding.",
				Position:    pixel.V(52, 4),
				ElementType: ui.CheckboxElement,
			},
			{
				Key:         "bomb_regenerate_delay",
				Text:        "Regeneration\nDelay",
				Color:       pixel.ToRGBA(constants.ColorWhite),
				Position:    pixel.V(-56, -14),
				ElementType: ui.TextElement,
				Anchor:      pixel.Right,
			},
			{
				Key:         "bomb_regenerate_delay_input",
				SprKey:      constants.TextCaret,
				Text:        "0",
				Batch:       constants.UIBatch,
				HelpText:    "The delay of the bomb's regeneration.",
				Position:    pixel.V(40, -14),
				Color:       pixel.ToRGBA(constants.ColorWhite),
				ElementType: ui.InputElement,
				Width:       1 * world.TileSize,
				Height:      1 * world.TileSize,
			},
			{
				Key:         "bomb_regenerate_delay_minus",
				SprKey:      "minus_btn",
				SprKey2:     "minus_btn_click",
				Batch:       constants.UIBatch,
				Position:    pixel.V(26, -14),
				ElementType: ui.ButtonElement,
			},
			{
				Key:         "bomb_regenerate_delay_plus",
				SprKey:      "plus_btn",
				SprKey2:     "plus_btn_click",
				Batch:       constants.UIBatch,
				Position:    pixel.V(54, -14),
				ElementType: ui.ButtonElement,
			},
		},
	}
	//f, err := os.Create("assets/ui/rearrange_puzzle_set.json")
	//if err != nil {
	//	panic(err)
	//}
	//bts, err := json.Marshal(RearrangePuzzleSetConstructor)
	//if err != nil {
	//	panic(err)
	//}
	//_, err = f.Write(bts)
	//if err != nil {
	//	panic(err)
	//}
	//f.Close()
}
